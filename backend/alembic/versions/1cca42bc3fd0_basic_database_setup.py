"""basic database setup

Revision ID: 1cca42bc3fd0
Revises: bce0fecab8a9
Create Date: 2023-12-12 10:44:26.140048

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '1cca42bc3fd0'
down_revision: Union[str, None] = 'bce0fecab8a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('actors',
    sa.Column('actorno', sa.Integer(), nullable=False),
    sa.Column('actorname', sa.Unicode(length=100), nullable=True),
    sa.Column('actoraffiliation', sa.Unicode(length=100), nullable=True),
    sa.Column('actornotes', sa.Unicode(length=1400), nullable=True),
    sa.PrimaryKeyConstraint('actorno')
    )
    op.create_table('taxa',
    sa.Column('taxno', sa.Integer(), nullable=False),
    sa.Column('taxorder', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsuborder', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsuperfamily', sa.Unicode(length=100), nullable=True),
    sa.Column('taxfamily', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsubfamily', sa.Unicode(length=100), nullable=True),
    sa.Column('taxtribe', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsubtribe', sa.Unicode(length=100), nullable=True),
    sa.Column('taxgenus', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsubgenus', sa.Unicode(length=100), nullable=True),
    sa.Column('taxspecies', sa.Unicode(length=100), nullable=True),
    sa.Column('taxsubspecies', sa.Unicode(length=100), nullable=True),
    sa.Column('authority', sa.Unicode(length=100), nullable=True),
    sa.Column('authorityyear', sa.Unicode(length=100), nullable=True),
    sa.PrimaryKeyConstraint('taxno')
    )
    op.create_table('collectorsforcollectionevents',
    sa.Column('collectororder', sa.Integer(), nullable=False),
    sa.Column('lotno', sa.String(length=20), nullable=False),
    sa.Column('actorno', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['actorno'], ['actors.actorno'], ),
    sa.ForeignKeyConstraint(['lotno'], ['collectionevents.lotno'], ),
    sa.PrimaryKeyConstraint('collectororder')
    )
    op.create_table('determinations',
    sa.Column('determinationno', sa.Integer(), nullable=False),
    sa.Column('taxno', sa.Integer(), nullable=False),
    sa.Column('specimenno', sa.String(length=20), nullable=False),
    sa.Column('identifier', sa.Unicode(length=100), nullable=True),
    sa.Column('iddate', sa.Date(), nullable=True),
    sa.Column('verifier', sa.Unicode(length=100), nullable=True),
    sa.Column('verifierdate', sa.Date(), nullable=True),
    sa.Column('idnote', sa.Unicode(length=1400), nullable=True),
    sa.ForeignKeyConstraint(['specimenno'], ['specimens.specimenno'], ),
    sa.ForeignKeyConstraint(['taxno'], ['taxa.taxno'], ),
    sa.PrimaryKeyConstraint('determinationno')
    )
    op.create_table('images',
    sa.Column('imageno', sa.Integer(), nullable=False),
    sa.Column('specimenno', sa.String(length=20), nullable=False),
    sa.Column('imager', sa.Integer(), nullable=False),
    sa.Column('imagedate', sa.Date(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('imagenotes', sa.Unicode(length=1400), nullable=True),
    sa.ForeignKeyConstraint(['imager'], ['actors.actorno'], ),
    sa.ForeignKeyConstraint(['specimenno'], ['specimens.specimenno'], ),
    sa.PrimaryKeyConstraint('imageno')
    )
    op.add_column('collectionevents', sa.Column('collstartdate', sa.Date(), nullable=True))
    op.add_column('collectionevents', sa.Column('collenddate', sa.Date(), nullable=True))
    op.add_column('collectionevents', sa.Column('gpsdatum', sa.Unicode(length=100), nullable=True))
    op.alter_column('collectionevents', 'substrate',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.Unicode(length=100),
               existing_nullable=True)
    op.alter_column('collectionevents', 'assocvegetation',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.Unicode(length=100),
               existing_nullable=True)
    op.alter_column('collectionevents', 'habitat',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.Unicode(length=100),
               existing_nullable=True)
    op.alter_column('collectionevents', 'locality',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.Unicode(length=100),
               existing_nullable=True)
    op.alter_column('collectionevents', 'colllocation',
               existing_type=mysql.VARCHAR(length=200),
               type_=sa.Unicode(length=400),
               existing_nullable=True)
    op.alter_column('collectionevents', 'collnotes',
               existing_type=mysql.VARCHAR(length=500),
               type_=sa.Unicode(length=1400),
               existing_nullable=True)
    op.drop_column('collectionevents', 'colldate')
    op.drop_column('collectionevents', 'collector2')
    op.drop_column('collectionevents', 'colltime')
    op.drop_column('collectionevents', 'datum')
    op.drop_column('collectionevents', 'collsublocation')
    op.drop_column('collectionevents', 'collector1')
    op.drop_column('collectionevents', 'collmethod')
    op.drop_column('collectionevents', 'elevation_units')
    op.drop_column('collectionevents', 'gpslongitudeverbatim')
    op.drop_column('collectionevents', 'gpslatitudeverbatim')
    op.drop_column('collectionevents', 'collector4')
    op.drop_column('collectionevents', 'collector3')
    op.drop_column('collectionevents', 'weathernotes')
    op.alter_column('specimens', 'specimenno',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('specimens', 'lotno',
               existing_type=mysql.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.drop_column('specimens', 'taxsubspecies')
    op.drop_column('specimens', 'taxsubfamily')
    op.drop_column('specimens', 'taxorder')
    op.drop_column('specimens', 'taxsubgenus')
    op.drop_column('specimens', 'taxsuborder')
    op.drop_column('specimens', 'taxfamily')
    op.drop_column('specimens', 'taxspecies')
    op.drop_column('specimens', 'verifierdate')
    op.drop_column('specimens', 'authority')
    op.drop_column('specimens', 'taxtribe')
    op.drop_column('specimens', 'taxsuperfamily')
    op.drop_column('specimens', 'identifier')
    op.drop_column('specimens', 'idnote')
    op.drop_column('specimens', 'iddate')
    op.drop_column('specimens', 'authorityyear')
    op.drop_column('specimens', 'taxsubtribe')
    op.drop_column('specimens', 'taxgenus')
    op.drop_column('specimens', 'verifier')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('specimens', sa.Column('verifier', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxgenus', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsubtribe', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('authorityyear', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('iddate', sa.DATE(), nullable=True))
    op.add_column('specimens', sa.Column('idnote', mysql.VARCHAR(length=500), nullable=True))
    op.add_column('specimens', sa.Column('identifier', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsuperfamily', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxtribe', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('authority', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('verifierdate', sa.DATE(), nullable=True))
    op.add_column('specimens', sa.Column('taxspecies', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxfamily', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsuborder', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsubgenus', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxorder', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsubfamily', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('specimens', sa.Column('taxsubspecies', mysql.VARCHAR(length=200), nullable=True))
    op.alter_column('specimens', 'lotno',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=False)
    op.alter_column('specimens', 'specimenno',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=20),
               existing_nullable=False)
    op.add_column('collectionevents', sa.Column('weathernotes', mysql.VARCHAR(length=500), nullable=True))
    op.add_column('collectionevents', sa.Column('collector3', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('collector4', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('gpslatitudeverbatim', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('gpslongitudeverbatim', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('elevation_units', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('collmethod', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('collector1', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('collsublocation', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('datum', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('colltime', mysql.TIME(), nullable=True))
    op.add_column('collectionevents', sa.Column('collector2', mysql.VARCHAR(length=200), nullable=True))
    op.add_column('collectionevents', sa.Column('colldate', sa.DATE(), nullable=True))
    op.alter_column('collectionevents', 'collnotes',
               existing_type=sa.Unicode(length=1400),
               type_=mysql.VARCHAR(length=500),
               existing_nullable=True)
    op.alter_column('collectionevents', 'colllocation',
               existing_type=sa.Unicode(length=400),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('collectionevents', 'locality',
               existing_type=sa.Unicode(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('collectionevents', 'habitat',
               existing_type=sa.Unicode(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('collectionevents', 'assocvegetation',
               existing_type=sa.Unicode(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=True)
    op.alter_column('collectionevents', 'substrate',
               existing_type=sa.Unicode(length=100),
               type_=mysql.VARCHAR(length=200),
               existing_nullable=True)
    op.drop_column('collectionevents', 'gpsdatum')
    op.drop_column('collectionevents', 'collenddate')
    op.drop_column('collectionevents', 'collstartdate')
    op.drop_table('images')
    op.drop_table('determinations')
    op.drop_table('collectorsforcollectionevents')
    op.drop_table('taxa')
    op.drop_table('actors')
    # ### end Alembic commands ###
